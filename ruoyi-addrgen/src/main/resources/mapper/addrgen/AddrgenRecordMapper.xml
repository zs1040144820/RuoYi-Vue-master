<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.addrgen.mapper.AddrgenRecordMapper">
    
    <resultMap type="AddrgenRecord" id="AddrgenRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="inputFilename"    column="input_filename"    />
        <result property="outputFilename"    column="output_filename"    />
        <result property="genTime"    column="gen_time"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="ismul"    column="ismul"    />
        <result property="totalNums"    column="total_nums"    />
        <result property="alias"    column="alias"    />
    </resultMap>

    <resultMap id="AddrgenRecordAddrgenRecordDetailsResult" type="AddrgenRecord" extends="AddrgenRecordResult">
        <collection property="addrgenRecordDetailsList" notNullColumn="sub_details_id" javaType="java.util.List" resultMap="AddrgenRecordDetailsResult" />
    </resultMap>

    <resultMap type="AddrgenRecordDetails" id="AddrgenRecordDetailsResult">
        <result property="detailsId"    column="sub_details_id"    />
        <result property="ipaddr"    column="sub_ipaddr"    />
        <result property="isactive"    column="sub_isactive"    />
        <result property="recordId"    column="sub_record_id"    />
    </resultMap>

    <sql id="selectAddrgenRecordVo">
        select record_id, input_filename, output_filename, gen_time, start_time, end_time, ismul, total_nums, alias from addrgen_record
    </sql>

    <select id="selectAddrgenRecordList" parameterType="AddrgenRecord" resultMap="AddrgenRecordResult">
        <include refid="selectAddrgenRecordVo"/>
        <where>  
            <if test="inputFilename != null  and inputFilename != ''"> and input_filename like concat('%', #{inputFilename}, '%')</if>
            <if test="outputFilename != null  and outputFilename != ''"> and output_filename like concat('%', #{outputFilename}, '%')</if>
            <if test="params.beginGenTime != null and params.beginGenTime != '' and params.endGenTime != null and params.endGenTime != ''"> and gen_time between #{params.beginGenTime} and #{params.endGenTime}</if>
            <if test="params.beginStartTime != null and params.beginStartTime != '' and params.endStartTime != null and params.endStartTime != ''"> and start_time between #{params.beginStartTime} and #{params.endStartTime}</if>
            <if test="params.beginEndTime != null and params.beginEndTime != '' and params.endEndTime != null and params.endEndTime != ''"> and end_time between #{params.beginEndTime} and #{params.endEndTime}</if>
            <if test="ismul != null  and ismul != ''"> and ismul = #{ismul}</if>
            <if test="params.beginTotalNums != null and params.beginTotalNums != '' and params.endTotalNums != null and params.endTotalNums != ''"> and total_nums between #{params.beginTotalNums} and #{params.endTotalNums}</if>
        </where>
    </select>
    
    <select id="selectAddrgenRecordByRecordId" parameterType="Long" resultMap="AddrgenRecordAddrgenRecordDetailsResult">
        select a.record_id, a.input_filename, a.output_filename, a.gen_time, a.start_time, a.end_time, a.ismul, a.total_nums,
 b.details_id as sub_details_id, b.ipaddr as sub_ipaddr, b.isactive as sub_isactive, b.record_id as sub_record_id
        from addrgen_record a
        left join addrgen_record_details b on b.record_id = a.record_id
        where a.record_id = #{recordId}
    </select>
        
    <insert id="insertAddrgenRecord" parameterType="AddrgenRecord" useGeneratedKeys="true" keyProperty="recordId">
        insert into addrgen_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="inputFilename != null">input_filename,</if>
            <if test="outputFilename != null">output_filename,</if>
            <if test="genTime != null">gen_time,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="ismul != null">ismul,</if>
            <if test="totalNums != null">total_nums,</if>
            <if test="alias != null">alias,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="inputFilename != null">#{inputFilename},</if>
            <if test="outputFilename != null">#{outputFilename},</if>
            <if test="genTime != null">#{genTime},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="ismul != null">#{ismul},</if>
            <if test="totalNums != null">#{totalNums},</if>
            <if test="alias != null">#{alias},</if>
         </trim>
    </insert>

    <update id="updateAddrgenRecord" parameterType="AddrgenRecord">
        update addrgen_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="inputFilename != null">input_filename = #{inputFilename},</if>
            <if test="outputFilename != null">output_filename = #{outputFilename},</if>
            <if test="genTime != null">gen_time = #{genTime},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="ismul != null">ismul = #{ismul},</if>
            <if test="totalNums != null">total_nums = #{totalNums},</if>
            <if test="alias != null">alias = #{alias},</if>
        </trim>
        where record_id = #{recordId}
    </update>

    <delete id="deleteAddrgenRecordByRecordId" parameterType="Long">
        delete from addrgen_record where record_id = #{recordId}
    </delete>

    <delete id="deleteAddrgenRecordByRecordIds" parameterType="String">
        delete from addrgen_record where record_id in 
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>
    
    <delete id="deleteAddrgenRecordDetailsByRecordIds" parameterType="String">
        delete from addrgen_record_details where record_id in 
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>

    <delete id="deleteAddrgenRecordDetailsByRecordId" parameterType="Long">
        delete from addrgen_record_details where record_id = #{recordId}
    </delete>

    <insert id="batchAddrgenRecordDetails">
        insert into addrgen_record_details( details_id, ipaddr, isactive, record_id) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.detailsId}, #{item.ipaddr}, #{item.isactive}, #{item.recordId})
        </foreach>
    </insert>
</mapper>